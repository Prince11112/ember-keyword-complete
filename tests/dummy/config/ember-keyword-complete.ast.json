[
  {
    "comment": "/**\n   * Flag that represents whether the item is active.\n   * @property active\n   * @type boolean\n   * @default false\n   * @public\n   */",
    "meta": {
      "range": [
        286,
        299
      ],
      "filename": "keyword-complete-tooltip-item.js",
      "lineno": 12,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000018",
        "name": "active",
        "type": "Literal",
        "value": false
      }
    },
    "description": "Flag that represents whether the item is active.",
    "properties": [
      {
        "name": "active"
      }
    ],
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": "false",
    "access": "public",
    "name": "active",
    "longname": "active",
    "kind": "member",
    "scope": "global"
  },
  {
    "comment": "/**\n * Function to set the caret position for a given element.\n * @param {HTMLInputElement|HTMLTextAreaElement} element\n * @param {Number} caretPosition\n */",
    "meta": {
      "range": [
        528,
        659
      ],
      "filename": "keyword-complete.js",
      "lineno": 25,
      "columnno": 0,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000119",
        "name": "setCaretPosition",
        "type": "FunctionDeclaration",
        "paramnames": [
          "element",
          "caretPosition"
        ]
      }
    },
    "description": "Function to set the caret position for a given element.",
    "params": [
      {
        "type": {
          "names": [
            "HTMLInputElement",
            "HTMLTextAreaElement"
          ]
        },
        "name": "element"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "name": "caretPosition"
      }
    ],
    "name": "setCaretPosition",
    "longname": "setCaretPosition",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\n * Function to read the current caret position for a given element\n * @param {HTMLInputElement|HTMLTextAreaElement} el\n * @returns {Number}\n */",
    "meta": {
      "range": [
        809,
        870
      ],
      "filename": "keyword-complete.js",
      "lineno": 35,
      "columnno": 0,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000136",
        "name": "getCaretPosition",
        "type": "FunctionDeclaration",
        "paramnames": [
          "el"
        ]
      }
    },
    "description": "Function to read the current caret position for a given element",
    "params": [
      {
        "type": {
          "names": [
            "HTMLInputElement",
            "HTMLTextAreaElement"
          ]
        },
        "name": "el"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Number"
          ]
        }
      }
    ],
    "name": "getCaretPosition",
    "longname": "getCaretPosition",
    "kind": "function",
    "scope": "global"
  },
  {
    "comment": "/**\n * Input/Textarea wrapping component that adds listeners for keyboard interaction and yields data.\n *\n * @class KeywordComplete\n * @module ember-keyword-complete/components/keyword-complete\n * @extends Ember.Component\n * @public\n */",
    "meta": {
      "filename": "keyword-complete.js",
      "lineno": 39,
      "columnno": 0,
      "path": "ember-keyword-complete/addon/components",
      "code": {}
    },
    "description": "Input/Textarea wrapping component that adds listeners for keyboard interaction and yields data.",
    "kind": "module",
    "name": "ember-keyword-complete/components/keyword-complete",
    "augments": [
      "Ember.Component"
    ],
    "access": "public",
    "longname": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Async suggestion loading debounce interval.\n   * @property loadDebounceInterval\n   * @type Number\n   * @default 300\n   * @public\n   */",
    "meta": {
      "range": [
        1341,
        1366
      ],
      "filename": "keyword-complete.js",
      "lineno": 58,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000157",
        "name": "loadDebounceInterval",
        "type": "Literal",
        "value": 300
      }
    },
    "description": "Async suggestion loading debounce interval.",
    "properties": [
      {
        "name": "loadDebounceInterval"
      }
    ],
    "type": {
      "names": [
        "Number"
      ]
    },
    "defaultvalue": "300",
    "access": "public",
    "name": "loadDebounceInterval",
    "longname": "module:ember-keyword-complete/components/keyword-complete~loadDebounceInterval",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Minimum query length before suggestion loading is triggered.\n   * This values can be overwritten on a per data-source basis, by setting `minQueryLength` for a data source.\n   * @property minQueryLength\n   * @type Number\n   * @default 0\n   * @public\n   */",
    "meta": {
      "range": [
        1637,
        1654
      ],
      "filename": "keyword-complete.js",
      "lineno": 68,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000159",
        "name": "minQueryLength",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Minimum query length before suggestion loading is triggered.\nThis values can be overwritten on a per data-source basis, by setting `minQueryLength` for a data source.",
    "properties": [
      {
        "name": "minQueryLength"
      }
    ],
    "type": {
      "names": [
        "Number"
      ]
    },
    "defaultvalue": "0",
    "access": "public",
    "name": "minQueryLength",
    "longname": "module:ember-keyword-complete/components/keyword-complete~minQueryLength",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Object that represents all available data sources for the keyword completion.\n   * The datasource value object must contain a method to extract a string from a given suggestion.\n   * This `extractDataString(suggestion)` will be used once an suggestion was chosen to be used.\n   * In addition a `loadSuggestion(query)` must be present that returns a promise that resolves\n   * an array of suggestion for the passed `query` string.\n   * An additional `component` property can be set that is later used in the `keyword-complete-tooltip-item`\n   * if the component is not in block form.\n   * @property dataSources\n   * @type Object\n   * @default {}\n   * @public\n   * @example\n   * component.set('dataSources', {\n   *  '@': {\n   *     component: 'user-item',\n   *     extractDataString(item) {\n   *       return `@${item.nick}`;\n   *     },\n   *     loadSuggestions(query) {\n   *       const queryLower = query.substring(1).toLowerCase();\n   *       return RSVP.resolve(ENV.APP.USERS.filter(item => item.nick.toLowerCase().startsWith(queryLower)));\n   *     }\n   *  }\n   * });\n   */",
    "meta": {
      "range": [
        2748,
        2763
      ],
      "filename": "keyword-complete.js",
      "lineno": 96,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000161",
        "name": "dataSources",
        "type": "ObjectExpression",
        "value": "{}"
      }
    },
    "description": "Object that represents all available data sources for the keyword completion.\nThe datasource value object must contain a method to extract a string from a given suggestion.\nThis `extractDataString(suggestion)` will be used once an suggestion was chosen to be used.\nIn addition a `loadSuggestion(query)` must be present that returns a promise that resolves\nan array of suggestion for the passed `query` string.\nAn additional `component` property can be set that is later used in the `keyword-complete-tooltip-item`\nif the component is not in block form.",
    "properties": [
      {
        "name": "dataSources"
      }
    ],
    "type": {
      "names": [
        "Object"
      ]
    },
    "defaultvalue": "{}",
    "access": "public",
    "examples": [
      "component.set('dataSources', {\n '@': {\n    component: 'user-item',\n    extractDataString(item) {\n      return `@${item.nick}`;\n    },\n    loadSuggestions(query) {\n      const queryLower = query.substring(1).toLowerCase();\n      return RSVP.resolve(ENV.APP.USERS.filter(item => item.nick.toLowerCase().startsWith(queryLower)));\n    }\n }\n});"
    ],
    "name": "dataSources",
    "longname": "module:ember-keyword-complete/components/keyword-complete~dataSources",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Autocompletion target text (usually same value as the target value).\n   * @property text\n   * @type String\n   * @default ''\n   * @public\n   */",
    "meta": {
      "range": [
        2922,
        2930
      ],
      "filename": "keyword-complete.js",
      "lineno": 105,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000163",
        "name": "text",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Autocompletion target text (usually same value as the target value).",
    "properties": [
      {
        "name": "text"
      }
    ],
    "type": {
      "names": [
        "String"
      ]
    },
    "defaultvalue": "''",
    "access": "public",
    "name": "text",
    "longname": "module:ember-keyword-complete/components/keyword-complete~text",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Target element selector (Should select an input or textarea).\n   * @property target\n   * @type String\n   * @default ''\n   * @example '#message-textarea'\n   * @public\n   */",
    "meta": {
      "range": [
        3118,
        3128
      ],
      "filename": "keyword-complete.js",
      "lineno": 115,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000165",
        "name": "target",
        "type": "Literal",
        "value": ""
      }
    },
    "description": "Target element selector (Should select an input or textarea).",
    "properties": [
      {
        "name": "target"
      }
    ],
    "type": {
      "names": [
        "String"
      ]
    },
    "defaultvalue": "''",
    "examples": [
      "'#message-textarea'"
    ],
    "access": "public",
    "name": "target",
    "longname": "module:ember-keyword-complete/components/keyword-complete~target",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * In order to break control whether the component breaks on spaces simply set the `breakOnSpaces` property to false.\n   * Great for Facebook tags.\n   * @property breakOnSpaces\n   * @type Boolean\n   * @default false\n   * @public\n   */",
    "meta": {
      "range": [
        3376,
        3395
      ],
      "filename": "keyword-complete.js",
      "lineno": 125,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000167",
        "name": "breakOnSpaces",
        "type": "Literal",
        "value": true
      }
    },
    "description": "In order to break control whether the component breaks on spaces simply set the `breakOnSpaces` property to false.\nGreat for Facebook tags.",
    "properties": [
      {
        "name": "breakOnSpaces"
      }
    ],
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "defaultvalue": "false",
    "access": "public",
    "name": "breakOnSpaces",
    "longname": "module:ember-keyword-complete/components/keyword-complete~breakOnSpaces",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Whether the completion is enabled or disabled.\n   * @property Boolean\n   * @type Boolean\n   * @default true\n   * @public\n   */",
    "meta": {
      "range": [
        3538,
        3551
      ],
      "filename": "keyword-complete.js",
      "lineno": 134,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000169",
        "name": "enabled",
        "type": "Literal",
        "value": true
      }
    },
    "description": "Whether the completion is enabled or disabled.",
    "properties": [
      {
        "name": "Boolean"
      }
    ],
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "defaultvalue": "true",
    "access": "public",
    "name": "enabled",
    "longname": "module:ember-keyword-complete/components/keyword-complete~enabled",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Wether the completion should have a typing state\n   * @property Boolean\n   * @type Boolean\n   * @default false\n   * @public\n   */",
    "meta": {
      "range": [
        3697,
        3725
      ],
      "filename": "keyword-complete.js",
      "lineno": 143,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000171",
        "name": "shouldShowTypingState",
        "type": "Literal",
        "value": false
      }
    },
    "description": "Wether the completion should have a typing state",
    "properties": [
      {
        "name": "Boolean"
      }
    ],
    "type": {
      "names": [
        "Boolean"
      ]
    },
    "defaultvalue": "false",
    "access": "public",
    "name": "shouldShowTypingState",
    "longname": "module:ember-keyword-complete/components/keyword-complete~shouldShowTypingState",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * @property typingStateTimeout\n   * @type Number\n   * @default 2000\n   * @public\n   */",
    "meta": {
      "range": [
        3826,
        3850
      ],
      "filename": "keyword-complete.js",
      "lineno": 151,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000173",
        "name": "typingStateTimeout",
        "type": "Literal",
        "value": 2000
      }
    },
    "properties": [
      {
        "name": "typingStateTimeout"
      }
    ],
    "type": {
      "names": [
        "Number"
      ]
    },
    "defaultvalue": "2000",
    "access": "public",
    "name": "typingStateTimeout",
    "longname": "module:ember-keyword-complete/components/keyword-complete~typingStateTimeout",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Virtual caret that indicates the current completion start position\n   * @readonly\n   * @type number | null\n   */",
    "meta": {
      "range": [
        3979,
        3995
      ],
      "filename": "keyword-complete.js",
      "lineno": 158,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000175",
        "name": "caretStart",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Virtual caret that indicates the current completion start position",
    "readonly": true,
    "type": {
      "names": [
        "number",
        "null"
      ]
    },
    "name": "caretStart",
    "longname": "module:ember-keyword-complete/components/keyword-complete~caretStart",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Virtual caret that indicates the current completion end position\n   * @readonly\n   * @type number | null\n   */",
    "meta": {
      "range": [
        4122,
        4136
      ],
      "filename": "keyword-complete.js",
      "lineno": 165,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000177",
        "name": "caretEnd",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Virtual caret that indicates the current completion end position",
    "readonly": true,
    "type": {
      "names": [
        "number",
        "null"
      ]
    },
    "name": "caretEnd",
    "longname": "module:ember-keyword-complete/components/keyword-complete~caretEnd",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Index that indicates the currently preselected autocomplete suggestion.\n   * If value is `-1` it means no preselected item.\n   * @type number\n   * @readonly\n   */",
    "meta": {
      "range": [
        4315,
        4331
      ],
      "filename": "keyword-complete.js",
      "lineno": 173,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000179",
        "name": "selectionIdx",
        "type": "UnaryExpression",
        "value": -1
      }
    },
    "description": "Index that indicates the currently preselected autocomplete suggestion.\nIf value is `-1` it means no preselected item.",
    "type": {
      "names": [
        "number"
      ]
    },
    "readonly": true,
    "name": "selectionIdx",
    "longname": "module:ember-keyword-complete/components/keyword-complete~selectionIdx",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Current caret position\n   * @readonly\n   * @private\n   */",
    "meta": {
      "range": [
        4405,
        4421
      ],
      "filename": "keyword-complete.js",
      "lineno": 180,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000182",
        "name": "caretPosition",
        "type": "Literal",
        "value": 0
      }
    },
    "description": "Current caret position",
    "readonly": true,
    "access": "private",
    "name": "caretPosition",
    "longname": "module:ember-keyword-complete/components/keyword-complete~caretPosition",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * RegExp that matches keywords\n   * @default /[0-9a-zA-Z_.]/\n   */",
    "meta": {
      "range": [
        4502,
        4530
      ],
      "filename": "keyword-complete.js",
      "lineno": 186,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000184",
        "name": "keywordRegex",
        "type": "Identifier",
        "value": "REGEX_KEYWORDS"
      }
    },
    "description": "RegExp that matches keywords",
    "defaultvalue": "/[0-9a-zA-Z_.]/",
    "name": "keywordRegex",
    "longname": "module:ember-keyword-complete/components/keyword-complete~keywordRegex",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Key for the current data source\n   * @readonly\n   */",
    "meta": {
      "range": [
        4599,
        4621
      ],
      "filename": "keyword-complete.js",
      "lineno": 192,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000186",
        "name": "currentSourceKey",
        "type": "Literal",
        "value": null
      }
    },
    "description": "Key for the current data source",
    "readonly": true,
    "name": "currentSourceKey",
    "longname": "module:ember-keyword-complete/components/keyword-complete~currentSourceKey",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * @todo figure out what this indicates\n   * @readonly\n   */",
    "meta": {
      "range": [
        4695,
        4717
      ],
      "filename": "keyword-complete.js",
      "lineno": 198,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000188",
        "name": "showTypingState",
        "type": "Literal",
        "value": false
      }
    },
    "todo": [
      "figure out what this indicates"
    ],
    "readonly": true,
    "name": "showTypingState",
    "longname": "module:ember-keyword-complete/components/keyword-complete~showTypingState",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * List of autocomplete suggestions\n   * @readonly\n   */",
    "meta": {
      "range": [
        4787,
        4802
      ],
      "filename": "keyword-complete.js",
      "lineno": 204,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000190",
        "name": "suggestions",
        "type": "ArrayExpression",
        "value": "[]"
      }
    },
    "description": "List of autocomplete suggestions",
    "readonly": true,
    "name": "suggestions",
    "longname": "module:ember-keyword-complete/components/keyword-complete~suggestions",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * List of completion errors\n   * @readonly\n   */",
    "meta": {
      "range": [
        4865,
        4875
      ],
      "filename": "keyword-complete.js",
      "lineno": 210,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000192",
        "name": "errors",
        "type": "ArrayExpression",
        "value": "[]"
      }
    },
    "description": "List of completion errors",
    "readonly": true,
    "name": "errors",
    "longname": "module:ember-keyword-complete/components/keyword-complete~errors",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Computed property that represents the current keyword suggestion query.\n   * @property filterQuery\n   * @type String\n   * @default ''\n   * @example '@embe'\n   * @private\n   */",
    "meta": {
      "range": [
        5181,
        5606
      ],
      "filename": "keyword-complete.js",
      "lineno": 228,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000206",
        "name": "filterQuery",
        "type": "CallExpression",
        "value": ""
      }
    },
    "description": "Computed property that represents the current keyword suggestion query.",
    "properties": [
      {
        "name": "filterQuery"
      }
    ],
    "type": {
      "names": [
        "String"
      ]
    },
    "defaultvalue": "''",
    "examples": [
      "'@embe'"
    ],
    "access": "private",
    "name": "filterQuery",
    "longname": "module:ember-keyword-complete/components/keyword-complete~filterQuery",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Component name for the currently active datasource\n   * @type String\n   * @property keyItemComponent\n   * @public\n   */",
    "meta": {
      "range": [
        5742,
        5959
      ],
      "filename": "keyword-complete.js",
      "lineno": 250,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000279",
        "name": "keyItemComponent",
        "type": "CallExpression",
        "value": ""
      }
    },
    "description": "Component name for the currently active datasource",
    "type": {
      "names": [
        "String"
      ]
    },
    "properties": [
      {
        "name": "keyItemComponent"
      }
    ],
    "access": "public",
    "name": "keyItemComponent",
    "longname": "module:ember-keyword-complete/components/keyword-complete~keyItemComponent",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Computed property that returns the current completion source itemClassName, if set, or undefined.\n   * @type String | undefined\n   */",
    "meta": {
      "range": [
        6109,
        6330
      ],
      "filename": "keyword-complete.js",
      "lineno": 259,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000306",
        "name": "keyItemClassName",
        "type": "CallExpression",
        "value": ""
      }
    },
    "description": "Computed property that returns the current completion source itemClassName, if set, or undefined.",
    "type": {
      "names": [
        "String",
        "undefined"
      ]
    },
    "name": "keyItemClassName",
    "longname": "module:ember-keyword-complete/components/keyword-complete~keyItemClassName",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Function to trigger suggestion loading by passing a filter query and the current source key\n   * @param {String} filterQuery\n   * @param {String} currentSourceKey\n   * @example\n   * component.setSuggestions('ember', '@');\n   */",
    "meta": {
      "range": [
        6574,
        7446
      ],
      "filename": "keyword-complete.js",
      "lineno": 271,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000333",
        "name": "setSuggestions",
        "type": "FunctionExpression"
      },
      "vars": {
        "loadSuggestionsId": "module:ember-keyword-complete/components/keyword-complete~setSuggestions~loadSuggestionsId",
        "": null
      }
    },
    "description": "Function to trigger suggestion loading by passing a filter query and the current source key",
    "params": [
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "filterQuery"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "name": "currentSourceKey"
      }
    ],
    "examples": [
      "component.setSuggestions('ember', '@');"
    ],
    "name": "setSuggestions",
    "longname": "module:ember-keyword-complete/components/keyword-complete~setSuggestions",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Observer that debounce calls the updateSuggestions method\n   * @private\n   */",
    "meta": {
      "range": [
        7540,
        8292
      ],
      "filename": "keyword-complete.js",
      "lineno": 296,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000461",
        "name": "debounceThis",
        "type": "CallExpression",
        "value": ""
      }
    },
    "description": "Observer that debounce calls the updateSuggestions method",
    "access": "private",
    "name": "debounceThis",
    "longname": "module:ember-keyword-complete/components/keyword-complete~debounceThis",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Computed property that represents whether the completion suggestion tooltip should be visible\n   * @property tooltipVisible\n   * @type boolean\n   * @default false\n   * @private\n   */",
    "meta": {
      "range": [
        8831,
        9237
      ],
      "filename": "keyword-complete.js",
      "lineno": 333,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000624",
        "name": "tooltipVisible",
        "type": "CallExpression",
        "value": ""
      }
    },
    "description": "Computed property that represents whether the completion suggestion tooltip should be visible",
    "properties": [
      {
        "name": "tooltipVisible"
      }
    ],
    "type": {
      "names": [
        "boolean"
      ]
    },
    "defaultvalue": "false",
    "access": "private",
    "name": "tooltipVisible",
    "longname": "module:ember-keyword-complete/components/keyword-complete~tooltipVisible",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Function to close the completion suggestion tooltip\n   * @property tooltipVisible\n   * @type Function\n   * @public\n   * @returns {void}\n   */",
    "meta": {
      "range": [
        9865,
        10128
      ],
      "filename": "keyword-complete.js",
      "lineno": 361,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000733",
        "name": "closeTooltip",
        "type": "FunctionExpression"
      }
    },
    "description": "Function to close the completion suggestion tooltip",
    "properties": [
      {
        "name": "tooltipVisible"
      }
    ],
    "type": {
      "names": [
        "function"
      ]
    },
    "access": "public",
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "name": "closeTooltip",
    "longname": "module:ember-keyword-complete/components/keyword-complete~closeTooltip",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Function that is called to select a datasource item\n   * @param {*} selectedItem\n   * @public\n   */",
    "meta": {
      "range": [
        10244,
        10968
      ],
      "filename": "keyword-complete.js",
      "lineno": 375,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000786",
        "name": "applySelection",
        "type": "FunctionExpression"
      },
      "vars": {
        "start": "module:ember-keyword-complete/components/keyword-complete~start",
        "caretPosition": "module:ember-keyword-complete/components/keyword-complete~applySelection~caretPosition",
        "text": "module:ember-keyword-complete/components/keyword-complete~applySelection~text",
        "filterQuery": "module:ember-keyword-complete/components/keyword-complete~applySelection~filterQuery",
        "selectionString": "module:ember-keyword-complete/components/keyword-complete~applySelection~selectionString",
        "before": "module:ember-keyword-complete/components/keyword-complete~applySelection~before",
        "after": "module:ember-keyword-complete/components/keyword-complete~applySelection~after",
        "": null
      }
    },
    "description": "Function that is called to select a datasource item",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "name": "selectedItem"
      }
    ],
    "access": "public",
    "name": "applySelection",
    "longname": "module:ember-keyword-complete/components/keyword-complete~applySelection",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Function called on document 'click'. Used to close the completion tooltip.\n   * @param {jQuery.Event} ev\n   * @public\n   */",
    "meta": {
      "range": [
        11108,
        11335
      ],
      "filename": "keyword-complete.js",
      "lineno": 403,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000911",
        "name": "documentClickHandler",
        "type": "FunctionExpression"
      },
      "vars": {
        "$tooltip": "module:ember-keyword-complete/components/keyword-complete~documentClickHandler~$tooltip"
      }
    },
    "description": "Function called on document 'click'. Used to close the completion tooltip.",
    "params": [
      {
        "type": {
          "names": [
            "jQuery.Event"
          ]
        },
        "name": "ev"
      }
    ],
    "access": "public",
    "name": "documentClickHandler",
    "longname": "module:ember-keyword-complete/components/keyword-complete~documentClickHandler",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Function called on target 'keypress'. Used to detect the start of a keyword completion.\n   * @param {jQuery.Event} ev\n   * @returns {void}\n   * @public\n   */",
    "meta": {
      "range": [
        11509,
        12701
      ],
      "filename": "keyword-complete.js",
      "lineno": 419,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100000956",
        "name": "keyPressHandler",
        "type": "FunctionExpression"
      },
      "vars": {
        "sources": "module:ember-keyword-complete/components/keyword-complete~keyPressHandler~sources",
        "input": "module:ember-keyword-complete/components/keyword-complete~keyPressHandler~input",
        "$input": "module:ember-keyword-complete/components/keyword-complete~keyPressHandler~$input",
        "caretPosition": "module:ember-keyword-complete/components/keyword-complete~keyPressHandler~caretPosition",
        "text": "module:ember-keyword-complete/components/keyword-complete~keyPressHandler~text",
        "prevChar": "module:ember-keyword-complete/components/keyword-complete~keyPressHandler~prevChar",
        "currentChar": "module:ember-keyword-complete/components/keyword-complete~keyPressHandler~currentChar",
        "breakOnSpaces": "module:ember-keyword-complete/components/keyword-complete~keyPressHandler~breakOnSpaces"
      }
    },
    "description": "Function called on target 'keypress'. Used to detect the start of a keyword completion.",
    "params": [
      {
        "type": {
          "names": [
            "jQuery.Event"
          ]
        },
        "name": "ev"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "access": "public",
    "name": "keyPressHandler",
    "longname": "module:ember-keyword-complete/components/keyword-complete~keyPressHandler",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n   * Function called on target 'keydown'. Used to handle \"special\" key presses.\n   * @param {jQuery.Event} ev\n   * @returns {boolean|undefined}\n   * @public\n   */",
    "meta": {
      "range": [
        12875,
        16021
      ],
      "filename": "keyword-complete.js",
      "lineno": 462,
      "columnno": 2,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100001145",
        "name": "keyDownHandler",
        "type": "FunctionExpression"
      },
      "vars": {
        "input": "module:ember-keyword-complete/components/keyword-complete~keyDownHandler~input",
        "sources": "module:ember-keyword-complete/components/keyword-complete~keyDownHandler~sources",
        "keyCode": "module:ember-keyword-complete/components/keyword-complete~keyDownHandler~keyCode",
        "visible": "module:ember-keyword-complete/components/keyword-complete~keyDownHandler~visible",
        "position": "module:ember-keyword-complete/components/keyword-complete~position",
        "prevChar": "module:ember-keyword-complete/components/keyword-complete~keyDownHandler~prevChar",
        "prevCharOk": "module:ember-keyword-complete/components/keyword-complete~prevCharOk",
        "": null,
        "selectionIdx": "module:ember-keyword-complete/components/keyword-complete~keyDownHandler~selectionIdx",
        "caretPosition": "module:ember-keyword-complete/components/keyword-complete~keyDownHandler~caretPosition"
      }
    },
    "description": "Function called on target 'keydown'. Used to handle \"special\" key presses.",
    "params": [
      {
        "type": {
          "names": [
            "jQuery.Event"
          ]
        },
        "name": "ev"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean",
            "undefined"
          ]
        }
      }
    ],
    "access": "public",
    "name": "keyDownHandler",
    "longname": "module:ember-keyword-complete/components/keyword-complete~keyDownHandler",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:ember-keyword-complete/components/keyword-complete"
  },
  {
    "comment": "/**\n     * Action that selects a completion value\n     * @param value\n     * @return {*}\n     */",
    "meta": {
      "range": [
        17304,
        17371
      ],
      "filename": "keyword-complete.js",
      "lineno": 623,
      "columnno": 4,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100001817",
        "name": "selectValue",
        "type": "FunctionExpression"
      }
    },
    "description": "Action that selects a completion value",
    "params": [
      {
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "name": "selectValue",
    "longname": "module:ember-keyword-complete/components/keyword-complete~actions.selectValue",
    "kind": "function",
    "memberof": "module:ember-keyword-complete/components/keyword-complete~actions",
    "scope": "static"
  },
  {
    "comment": "/**\n     * Action that preselects a value at given index\n     * @param {number} idx\n     */",
    "meta": {
      "range": [
        17473,
        17539
      ],
      "filename": "keyword-complete.js",
      "lineno": 630,
      "columnno": 4,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100001827",
        "name": "preselectValueAt",
        "type": "FunctionExpression"
      }
    },
    "description": "Action that preselects a value at given index",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "idx"
      }
    ],
    "name": "preselectValueAt",
    "longname": "module:ember-keyword-complete/components/keyword-complete~actions.preselectValueAt",
    "kind": "function",
    "memberof": "module:ember-keyword-complete/components/keyword-complete~actions",
    "scope": "static"
  },
  {
    "comment": "/**\n     * Action that refreshes the suggestion list\n     * @return {*}\n     */",
    "meta": {
      "range": [
        17629,
        17696
      ],
      "filename": "keyword-complete.js",
      "lineno": 637,
      "columnno": 4,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100001838",
        "name": "refreshSuggestions",
        "type": "FunctionExpression"
      }
    },
    "description": "Action that refreshes the suggestion list",
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "name": "refreshSuggestions",
    "longname": "module:ember-keyword-complete/components/keyword-complete~actions.refreshSuggestions",
    "kind": "function",
    "memberof": "module:ember-keyword-complete/components/keyword-complete~actions",
    "scope": "static"
  },
  {
    "comment": "/**\n     * Action to move the selection to a given position\n     * @param {number} position\n     */",
    "meta": {
      "range": [
        17807,
        17887
      ],
      "filename": "keyword-complete.js",
      "lineno": 645,
      "columnno": 4,
      "path": "ember-keyword-complete/addon/components",
      "code": {
        "id": "astnode100001846",
        "name": "moveCaret",
        "type": "FunctionExpression"
      }
    },
    "description": "Action to move the selection to a given position",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "position"
      }
    ],
    "name": "moveCaret",
    "longname": "module:ember-keyword-complete/components/keyword-complete~actions.moveCaret",
    "kind": "function",
    "memberof": "module:ember-keyword-complete/components/keyword-complete~actions",
    "scope": "static"
  },
  {
    "kind": "package",
    "longname": "package:undefined",
    "files": [
      "ember-keyword-complete/addon/components/keyword-complete-tooltip-item.js",
      "ember-keyword-complete/addon/components/keyword-complete-tooltip.js",
      "ember-keyword-complete/addon/components/keyword-complete.js"
    ]
  }
]
